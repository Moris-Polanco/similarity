# Import necessary libraries
import streamlit as st
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import CountVectorizer
import os

openai.api_key = os.environ.get("OPENAI_API_KEY")

import streamlit as st
import openai_secret_manager
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import CountVectorizer


def detect_gpt3(prompt):
    completions = openai.Completion.create(
        engine="text-davinci-002",
        prompt=prompt,
        max_tokens=2048,
        n=10,
        stop=None,
        temperature=0.5,
    )

    generated_texts = [choice.text for choice in completions.choices]
    similarity_scores = []
    for generated_text in generated_texts:
        vectorizer = CountVectorizer().fit_transform([prompt, generated_text])
        similarity_scores.append(cosine_similarity(vectorizer[0], vectorizer[1])[0][0])
    return max(similarity_scores)

st.title("GPT-3 Text Detection App")

text = st.text_area("Enter text to check if generated by GPT-3:")

if st.button("Check"):
    threshold = 0.8
    result = detect_gpt3(text)
    if result > threshold:
        st.success("The text is generated by GPT-3")
    else:
        st.error("The text is not generated by GPT-3")
